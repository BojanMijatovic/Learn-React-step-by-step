{"ast":null,"code":"var _jsxFileName = \"D:\\\\front-end-develop\\\\Learn React\\\\Basic\\\\Working With Components\\\\01-starting-setup\\\\src\\\\components\\\\ExpenseDate.js\";\nimport '../style/components/expenseDate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseDate = props => {\n  //  create date\n  const month = props.date.toLocaleString('en-US', {\n    month: 'long'\n  });\n  const year = props.date.getFullYear();\n  const day = props.date.toLocaleString('eu-US', {\n    day: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-date\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__month\",\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__year\",\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__day\",\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpenseDate;\nexport default ExpenseDate; // Assignment: Time to Practice: React & Component Basics\n\n/*Complete the instructions mentioned in the above video.\r\n\r\nIn detail:\r\n\r\n    Create a new component that is responsible for displaying expenses\r\n\r\n    Add multiple ExpenseItem components in that component\r\n\r\n    Keep the expenses data in the App component and pass that data into the newly created component\r\n\r\nYou can use this .css file for some styling for your Expenses \r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"sources":["D:/front-end-develop/Learn React/Basic/Working With Components/01-starting-setup/src/components/ExpenseDate.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day"],"mappings":";AAAA,OAAO,qCAAP;;;AAEA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAnC,CAAd;AACA,QAAMG,IAAI,GAAGJ,KAAK,CAACE,IAAN,CAAWG,WAAX,EAAb;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEG,IAAAA,GAAG,EAAE;AAAP,GAAnC,CAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBAAsCL;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBAAqCG;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCE;AAApC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZD;;KAAMP,W;AAcN,eAAeA,WAAf,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import '../style/components/expenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  //  create date\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString('eu-US', { day: '2-digit' });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n// Assignment: Time to Practice: React & Component Basics\r\n/*Complete the instructions mentioned in the above video.\r\n\r\nIn detail:\r\n\r\n    Create a new component that is responsible for displaying expenses\r\n\r\n    Add multiple ExpenseItem components in that component\r\n\r\n    Keep the expenses data in the App component and pass that data into the newly created component\r\n\r\nYou can use this .css file for some styling for your Expenses \r\n*/\r\n"]},"metadata":{},"sourceType":"module"}